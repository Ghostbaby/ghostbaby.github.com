<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GhostBaby`s Area]]></title>
  <link href="http://Ghostbaby.github.io/atom.xml" rel="self"/>
  <link href="http://Ghostbaby.github.io/"/>
  <updated>2013-08-21T10:23:08+08:00</updated>
  <id>http://Ghostbaby.github.io/</id>
  <author>
    <name><![CDATA[GhostBaby]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java虚拟机的统计监测工具:jstat]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/21/javaxu-ni-ji-de-tong-ji-jian-ce-gong-ju-jstat/"/>
    <updated>2013-08-21T10:05:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/21/javaxu-ni-ji-de-tong-ji-jian-ce-gong-ju-jstat</id>
    <content type="html"><![CDATA[<p>jstat:是JDK自带的虚拟机统计监测工具
在命令行中执行jstat</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Usage: jstat -help|-options
</span><span class='line'>       jstat -&lt;option&gt; [-t] [-h&lt;lines&gt;] &lt;vmid&gt; [&lt;interval&gt; [&lt;count&gt;]]
</span><span class='line'>
</span><span class='line'>Definitions:
</span><span class='line'>  &lt;option&gt;      An option reported by the -options option
</span><span class='line'>  &lt;vmid&gt;        Virtual Machine Identifier. A vmid takes the following form:
</span><span class='line'>                     &lt;lvmid&gt;[@&lt;hostname&gt;[:&lt;port&gt;]]
</span><span class='line'>                Where &lt;lvmid&gt; is the local vm identifier for the target
</span><span class='line'>                Java virtual machine, typically a process id; &lt;hostname&gt; is
</span><span class='line'>                the name of the host running the target Java virtual machine;
</span><span class='line'>                and &lt;port&gt; is the port number for the rmiregistry on the
</span><span class='line'>                target host. See the jvmstat documentation for a more complete
</span><span class='line'>                description of the Virtual Machine Identifier.
</span><span class='line'>  &lt;lines&gt;       Number of samples between header lines.
</span><span class='line'>  &lt;interval&gt;    Sampling interval. The following forms are allowed:
</span><span class='line'>                    &lt;n&gt;["ms"|"s"]
</span><span class='line'>                Where &lt;n&gt; is an integer and the suffix specifies the units as
</span><span class='line'>                milliseconds("ms") or seconds("s"). The default units are "ms".
</span><span class='line'>  &lt;count&gt;       Number of samples to take before terminating.
</span><span class='line'>  -J&lt;flag&gt;      Pass &lt;flag&gt; directly to the runtime system.</span></code></pre></td></tr></table></div></figure>


<p>通过不的option可以查看JVM当前的各种信息,比如:类, 内存等
参数主要有:</p>

<p>class: 类装载器统计
compiler: HotSpot JVM实时编译统计
gc: 垃圾回收堆统计
gccapacity: 内存统计
gccause: 垃圾回收统计信息，包括回收事件
gcnew: 对象创建情况
gcnewcapacity: 对象创建内存情况
gcold: 老年代和永久代统计
gcoldcapacity: 老年代统计
gcpermcapacity: 永久代统计
gcutil: 垃圾收集的统计
printcompilation: HotSpot编译器的方法统计</p>

<p>执行: jstat -class 2000 结果如下
加载类的个数  加载类的大小  卸载类的个数  卸载类的大小  加载和卸载所占用的时间
Loaded      Bytes       Unloaded    Bytes       Time
23624       29798.8     1346        1225.8      218.34</p>

<p>执行: jstat -compiler 2000 结果如下</p>

<p>编译的个数     编译失败的个数       无效的编译个数       编译所用时间  最后一次编译失败的类型       最后一次编译失败的方法
Compiled    Failed          Invalid         Time        FailedType          FailedMethod
1629        1           0           0.86        1               org/springframework/asm/ClassReader accept</p>

<p>执行: jstat -gc 2000 结果如下</p>

<p>Survivor 0的大小(KB) Survivor 1的大小(KB) Survivor 0使用大小 Survivor 1使用大小 Eden大小 Eden使用大小 Old大小 Old使用大小 Permanent大小 Permanent使用大小 Young generation GC次数 Young generation GC时间 Full GC次数 Full GC时间 所有GC时间
S0C S1C S0U S1U EC EU OC OU PC PU YGC YGCT FGC FGCT GCT
14016.0 14016.0 2932.5 0.0 112192.0 96465.9 280212.0 227679.0 116480.0 116338.6 418 37.823 34 59.928 97.751</p>

<p>执行: jstat -gccapacity 2000 结果如下</p>

<p>新生代最小 新生代最大 当前新生代(NGC=S0C+S1C+EC) Survivor 0大小 Survivor 1大小 Eden大小 老年代最小 老年代最大 老年代当前大小 老年代当前容量 永久代最小 永久代最大 当前永久代大小 永久代容量 Young GC次数 Full GC次数
NGCMN NGCMX NGC S0C S1C EC OGCMN OGCMX OGC OC PGCMN PGCMX PGC PC YGC FGC
13632.0 174720.0 140224.0 14016.0 14016.0 112192.0 27328.0 349568.0 280212.0 280212.0 12288.0 262144.0 116480.0 116480.0 419 34</p>

<p>执行: jstat -gccause 2000 结果如下</p>

<p>Survivor 0使用率 Survivor 1使用率 Eden使用率 Old使用率 Permanent使用率 YoungGC次数 YoungGC时间 FullGC次数 FullGC时间 GC总时间 上一次GC原因 当前GC原因
S0 S1 E O P YGC YGCT FGC FGCT GCT LGCC GCC
0.00 21.85 20.68 81.25 99.88 419 37.836 34 59.928 97.764 unknown GCCause No GC</p>

<p>执行: jstat -printcompilation 2000 结果如下</p>

<p>编译次数 方法的字节码的字节数 编译类型 编译方法
Compiled Size Type Method
13575 17 1 org/eclipse/swt/widgets/Caret hasFocus</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jvm 生成javacore和heapdump文件]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/21/jvm-sheng-cheng-javacorehe-heapdumpwen-jian/"/>
    <updated>2013-08-21T10:03:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/21/jvm-sheng-cheng-javacorehe-heapdumpwen-jian</id>
    <content type="html"><![CDATA[<p>（1）如果使用Oracle JVM也就是标准的SUN JVM（SUN已被oracle收购）
当内存溢出时生成heapdump文件配置如下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-Xloggc:${目录}/temp_gc.log           （GC日志文件）
</span><span class='line'>-XX:+HeapDumpOnOutOfMemoryError       （内存溢出时生成heapdump文件）
</span><span class='line'>-XX:HeapDumpPath=${目录}              （heapdump文件存放位置）</span></code></pre></td></tr></table></div></figure>


<p>如果要即时动态生成heapdump文件可以使用jmap命令，jdk6.0已取消了-XX:+HeapDumpOnCtrlBreak配置参数通过ctrl+break的方式。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jmap -dump:format=b,file=temp_heapdump.hprof &lt;pid&gt;</span></code></pre></td></tr></table></div></figure>


<p>（2）HP JVM</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-Xverbosegc:file=${目录}/temp_gc.log  （GC日志文件）
</span><span class='line'>-XX:+HeapDumpOnOutOfMemoryError       （内存溢出时生成heapdump文件）
</span><span class='line'>-XX:+HeapDumpOnCtrlBreak              （可以通过ctrl+break组合键动态生成heapdump文件）
</span><span class='line'>-XX:HeapDumpPath=${目录}              （heapdump文件存放位置）</span></code></pre></td></tr></table></div></figure>


<p>（3）IBM JVM</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>非windows操作系统环境中
</span><span class='line'>-XverboseGClog: ${目录}/temp_gc.log   （GC日志文件）
</span><span class='line'>-Xdump:heap:events=user,file=${目录}/pid%uid%pid.phd
</span><span class='line'>表示可以根据需要通过kill -3 &lt;pid&gt;产生DUMP文件，%uid和%pid为变量</span></code></pre></td></tr></table></div></figure>


<p>windows操作系统环境中</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>启动wsadmin,进入wsadmin环境
</span><span class='line'>wsadmin&gt; set jvm [$AdminControl completeObjectName type=JVM,process=server1,*]
</span><span class='line'>wsadmin&gt; $AdminControl invoke $jvm generateHeapDump
</span><span class='line'>wsadmin&gt; $AdminControl invoke $jvm dumpThreads</span></code></pre></td></tr></table></div></figure>


<p>这句要特地说明，如果你的应用负载很高，堆栈已经要满了，千万不用。生成DUMP文件类似于目前堆栈的镜像，会占用很多资源。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>01.jmap -dump:format=b,file=temp_heapdump.hprof &lt;pid&gt;</span></code></pre></td></tr></table></div></figure>


<p>temp_heapdump_1360_2.hprof  生成类似的文件，基本跟你目前堆栈使用大小持平。文件生成之后，就开始用 IBM HeapAnalyzer  进行分析。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IBM HeapAnalyzer]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/21/ibm-heapanalyzer/"/>
    <updated>2013-08-21T10:00:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/21/ibm-heapanalyzer</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://pan.baidu.com/share/link?shareid=4106270763&uk=3224714883</span></code></pre></td></tr></table></div></figure>


<p>HeapAnalyzer 是 IBM 的一个用来分析 Java 程序的内存堆使用情况的图形化工具。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[通过登陆IP记录Linux所有用户登录所操作的日志]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/21/tong-guo-deng-lu-ipji-lu-linuxsuo-you-yong-hu-deng-lu-suo-cao-zuo-de-ri-zhi/"/>
    <updated>2013-08-21T09:58:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/21/tong-guo-deng-lu-ipji-lu-linuxsuo-you-yong-hu-deng-lu-suo-cao-zuo-de-ri-zhi</id>
    <content type="html"><![CDATA[<p>/etc/profile 在末尾添加如下代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>history
</span><span class='line'>USER=`whoami`
</span><span class='line'>USER_IP=`who -u am i 2&gt;/dev/null| awk '{print $NF}'|sed -e 's/[()]//g'`
</span><span class='line'>if [ "$USER_IP" = "" ]; then
</span><span class='line'>USER_IP=`hostname`
</span><span class='line'>fi
</span><span class='line'>if [ ! -d /tmp/history ]; then
</span><span class='line'>mkdir /tmp/history
</span><span class='line'>chmod 777 /tmp/history
</span><span class='line'>fi
</span><span class='line'>if [ ! -d /tmp/history/${LOGNAME} ]; then
</span><span class='line'>mkdir /tmp/history/${LOGNAME}
</span><span class='line'>chmod 300 /tmp/history/${LOGNAME}
</span><span class='line'>fi
</span><span class='line'>export HISTSIZE=4096
</span><span class='line'>DT=`date +"%Y-%m-%d_%H:%M:%S"`
</span><span class='line'>export HISTFILE="/tmp/history/${LOGNAME}/${USER}@${USER_IP}_history.$DT"
</span><span class='line'>chmod 600 /tmp/history/${LOGNAME}/*history* 2&gt;/dev/null</span></code></pre></td></tr></table></div></figure>


<p>通过上面的脚本代码可以看出来，在系统的/tmp下就新建了个history目录（这个目录可以自定义），在目录中记录了所有的登陆过系统的用户和IP地址，这也是监测系统安全的方法之一。在进行一系列的操作之后，我们进入/tmp/history目录查看历史记录。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rpmdb: unable to join the environment解决办法]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/rpmdb-unable-to-join-the-environmentjie-jue-ban-fa/"/>
    <updated>2013-08-19T16:47:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/rpmdb-unable-to-join-the-environmentjie-jue-ban-fa</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /var/lib/rpm/
</span><span class='line'>mkdir db_bak
</span><span class='line'>mv db.* db_bak(最后看到几个__db.00*文件，我也给移走了，果然见效）
</span><span class='line'>rpm --rebuilddb     重建rpm数据库
</span><span class='line'>yum clean all</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[openstack安装rabbitmq-server消息队列时出现错误]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/openstackan-zhuang-rabbitmq-serverxiao-xi-dui-lie-shi-chu-xian-cuo-wu/"/>
    <updated>2013-08-19T16:06:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/openstackan-zhuang-rabbitmq-serverxiao-xi-dui-lie-shi-chu-xian-cuo-wu</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Unpacking rabbitmq-server (from .../rabbitmq-server_2.5.0-1ubuntu2_all.deb) ...
</span><span class='line'>Processing triggers for man-db ...
</span><span class='line'>Processing triggers for ureadahead ...
</span><span class='line'>Setting up rabbitmq-server (2.5.0-1ubuntu2) ...
</span><span class='line'>Starting rabbitmq-server: FAILED - check /var/log/rabbitmq/startup_{log, _err}
</span><span class='line'>rabbitmq-server.
</span><span class='line'>invoke-rc.d: inits_cript rabbitmq-server, action "start" failed.
</span><span class='line'>dpkg: error processing rabbitmq-server (--configure):
</span><span class='line'>subprocess installed post-installation s_cript returned error exit status 1
</span><span class='line'>Errors were encountered while processing:
</span><span class='line'>rabbitmq-server
</span><span class='line'>E: Sub-process /usr/bin/dpkg returned an error code (1)</span></code></pre></td></tr></table></div></figure>


<p>openstack安装rabbitmq-server消息队列时出现以下错误：</p>

<p>因为安装完成后，在启动rabbitmq-server时会检测hostname和hosts记录的对应关系
解决方法：
查看hostname</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># hostname 
</span><span class='line'>ubuntu6</span></code></pre></td></tr></table></div></figure>


<p>配置hosts文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/hosts |grep ubuntu6
</span><span class='line'>127.0.0.1 ubuntu6</span></code></pre></td></tr></table></div></figure>


<p>重启服务：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/init.d/rabbitmq-server start</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nova-rootwrap require configuration file as argument]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/nova-rootwrap-require-configuration-file-as-argument/"/>
    <updated>2013-08-19T16:04:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/nova-rootwrap-require-configuration-file-as-argument</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nova root wrapper requires a configuration file as argument but devstack doesn't feed it. This error was reported in the log of nova-volume and nova-network service.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>===========================nova-network log==========================
</span><span class='line'>2012-06-28 17:17:49 DEBUG nova.utils [-] ['sudo', '/usr/local/bin/nova-rootwrap', 'iptables-save', '-t', 'filter'] failed. Retrying. from (pi
</span><span class='line'>d=9143) execute /opt/stack/nova/nova/utils.py:197
</span><span class='line'>2012-06-28 17:17:50 DEBUG nova.utils [-] Running cmd (subprocess): sudo /usr/local/bin/nova-rootwrap iptables-save -t filter from (pid=9143)
</span><span class='line'>execute /opt/stack/nova/nova/utils.py:168
</span><span class='line'>2012-06-28 17:17:50 DEBUG nova.utils [-] Result was 97 from (pid=9143) execute /opt/stack/nova/nova/utils.py:184
</span><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "/usr/lib/python2.7/dist-packages/eventlet/hubs/hub.py", line 336, in fire_timers
</span><span class='line'>    timer()
</span><span class='line'>  File "/usr/lib/python2.7/dist-packages/eventlet/hubs/timer.py", line 56, in __call__
</span><span class='line'>    cb(*args, **kw)
</span><span class='line'>  File "/usr/lib/python2.7/dist-packages/eventlet/greenthread.py", line 192, in main
</span><span class='line'>    result = function(*args, **kwargs)
</span><span class='line'>  File "/opt/stack/nova/nova/service.py", line 110, in run_server
</span><span class='line'>    server.start()
</span><span class='line'>  File "/opt/stack/nova/nova/service.py", line 182, in start
</span><span class='line'>    self.manager.init_host()
</span><span class='line'>  File "/opt/stack/nova/nova/network/manager.py", line 1766, in init_host
</span><span class='line'>    self.l3driver.initialize()
</span><span class='line'>  File "/opt/stack/nova/nova/network/l3.py", line 82, in initialize
</span><span class='line'>    linux_net.init_host()
</span><span class='line'>  File "/opt/stack/nova/nova/network/linux_net.py", line 447, in init_host
</span><span class='line'>    add_snat_rule(ip_range)
</span><span class='line'>  File "/opt/stack/nova/nova/network/linux_net.py", line 437, in add_snat_rule
</span><span class='line'>    iptables_manager.apply()
</span><span class='line'>  File "/opt/stack/nova/nova/utils.py", line 672, in inner
</span><span class='line'>    retval = f(*args, **kwargs)
</span><span class='line'>  File "/opt/stack/nova/nova/network/linux_net.py", line 333, in apply
</span><span class='line'>    attempts=5)
</span><span class='line'>  File "/opt/stack/nova/nova/network/linux_net.py", line 828, in _execute
</span><span class='line'>    return utils.execute(*cmd, **kwargs)
</span><span class='line'>  File "/opt/stack/nova/nova/utils.py", line 191, in execute
</span><span class='line'>    cmd=' '.join(cmd))
</span><span class='line'>ProcessExecutionError: Unexpected error while running command.
</span><span class='line'>Command: sudo /usr/local/bin/nova-rootwrap iptables-save -t filter
</span><span class='line'>Exit code: 97
</span><span class='line'>Stdout: '/usr/local/bin/nova-rootwrap: Incorrect configuration file: iptables-save\n'
</span><span class='line'>Stderr: ''
</span><span class='line'>2012-06-28 17:17:50 CRITICAL nova [-] Unexpected error while running command.
</span><span class='line'>Command: sudo /usr/local/bin/nova-rootwrap iptables-save -t filter
</span><span class='line'>Exit code: 97
</span><span class='line'>Stdout: '/usr/local/bin/nova-rootwrap: Incorrect configuration file: iptables-save\n'
</span><span class='line'>Stderr: ''
</span><span class='line'>2012-06-28 17:17:50 TRACE nova Traceback (most recent call last):
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/bin/nova-network", line 48, in &lt;module&gt;
</span><span class='line'>2012-06-28 17:17:50 TRACE nova _launcher.wait()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/service.py", line 149, in wait
</span><span class='line'>2012-06-28 17:17:50 TRACE nova service.wait()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/usr/lib/python2.7/dist-packages/eventlet/greenthread.py", line 166, in wait
</span><span class='line'>2012-06-28 17:17:50 TRACE nova return self._exit_event.wait()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/usr/lib/python2.7/dist-packages/eventlet/event.py", line 116, in wait
</span><span class='line'>2012-06-28 17:17:50 TRACE nova return hubs.get_hub().switch()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/usr/lib/python2.7/dist-packages/eventlet/hubs/hub.py", line 177, in switch
</span><span class='line'>2012-06-28 17:17:50 TRACE nova return self.greenlet.switch()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/usr/lib/python2.7/dist-packages/eventlet/greenthread.py", line 192, in main
</span><span class='line'>2012-06-28 17:17:50 TRACE nova result = function(*args, **kwargs)
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/service.py", line 110, in run_server
</span><span class='line'>2012-06-28 17:17:50 TRACE nova server.start()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/service.py", line 182, in start
</span><span class='line'>2012-06-28 17:17:50 TRACE nova self.manager.init_host()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/network/manager.py", line 1766, in init_host
</span><span class='line'>2012-06-28 17:17:50 TRACE nova self.l3driver.initialize()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/network/l3.py", line 82, in initialize
</span><span class='line'>2012-06-28 17:17:50 TRACE nova linux_net.init_host()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/network/linux_net.py", line 447, in init_host
</span><span class='line'>2012-06-28 17:17:50 TRACE nova add_snat_rule(ip_range)
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/network/linux_net.py", line 437, in add_snat_rule
</span><span class='line'>2012-06-28 17:17:50 TRACE nova iptables_manager.apply()
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/utils.py", line 672, in inner
</span><span class='line'>2012-06-28 17:17:50 TRACE nova retval = f(*args, **kwargs)
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/network/linux_net.py", line 333, in apply
</span><span class='line'>2012-06-28 17:17:50 TRACE nova attempts=5)
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/network/linux_net.py", line 828, in _execute
</span><span class='line'>2012-06-28 17:17:50 TRACE nova return utils.execute(*cmd, **kwargs)
</span><span class='line'>2012-06-28 17:17:50 TRACE nova File "/opt/stack/nova/nova/utils.py", line 191, in execute
</span><span class='line'>2012-06-28 17:17:50 TRACE nova cmd=' '.join(cmd))
</span><span class='line'>2012-06-28 17:17:50 TRACE nova ProcessExecutionError: Unexpected error while running command.
</span><span class='line'>2012-06-28 17:17:50 TRACE nova Command: sudo /usr/local/bin/nova-rootwrap iptables-save -t filter
</span><span class='line'>2012-06-28 17:17:50 TRACE nova Exit code: 97
</span><span class='line'>2012-06-28 17:17:50 TRACE nova Stdout: '/usr/local/bin/nova-rootwrap: Incorrect configuration file: iptables-save\n'
</span><span class='line'>2012-06-28 17:17:50 TRACE nova Stderr: ''
</span><span class='line'>2012-06-28 17:17:50 TRACE nova
</span><span class='line'>============================================================</span></code></pre></td></tr></table></div></figure>


<p>上面的错误日志是从帖子上抓取的，实际的日志报错都是一样的。上面的问题主要是在nova-rootwrap的权限和默认目录路径上，下面要对rootwrap.conf进行配置\</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nova.conf
</span><span class='line'>
</span><span class='line'>The root_helper parameter is deprecated in favor of the rootwrap_config parameter:
</span><span class='line'>
</span><span class='line'>rootwrap_config=/etc/nova/rootwrap.conf
</span><span class='line'>
</span><span class='line'>If you still want to use root_helper, it now needs to include the configuration file:
</span><span class='line'>
</span><span class='line'>root_helper=sudo nova-rootwrap /etc/nova/rootwrap.conf</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux下如何模拟按键输入和模拟鼠标]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/linuxxia-ru-he-mo-ni-an-jian-shu-ru-he-mo-ni-shu-biao/"/>
    <updated>2013-08-19T15:34:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/linuxxia-ru-he-mo-ni-an-jian-shu-ru-he-mo-ni-shu-biao</id>
    <content type="html"><![CDATA[<p>1.查看/dev/input/eventX是什么类型的事件， cat /proc/bus/input/devices</p>

<p>设备有着自己特殊的按键键码，我需要将一些标准的按键，比如0－9，X－Z等模拟成标准按键，比如KEY_0,KEY-Z等，所以需要用到按键模拟，具体方法就是操作/dev/input/event1文件，向它写入个input_event结构体就可以模拟按键的输入了。</p>

<pre><code>  linux/input.h中有定义，这个文件还定义了标准按键的编码等
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct input_event {
</span><span class='line'>
</span><span class='line'>struct timeval time; //按键时间
</span><span class='line'>
</span><span class='line'>__u16 type; //类型，在下面有定义
</span><span class='line'>
</span><span class='line'>__u16 code; //要模拟成什么按键
</span><span class='line'>
</span><span class='line'>__s32 value;//是按下还是释放
</span><span class='line'>
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>code：</p>

<pre><code> 事件的代码.如果事件的类型代码是EV_KEY,该代码code为设备键盘代码.代码植0~127为键盘上的按键代码,0x110~0x116 为鼠标上按键代码,其中0x110(BTN_ LEFT)为鼠标左键,0x111(BTN_RIGHT)为鼠标右键,0x112(BTN_ MIDDLE)为鼠标中键.其它代码含义请参看include/linux/input.h文件. 如果事件的类型代码是EV_REL,code值表示轨迹的类型.如指示鼠标的X轴方向REL_X(代码为0x00),指示鼠标的Y轴方向REL_Y(代码为0x01),指示鼠标中轮子方向REL_WHEEL(代码为0x08).
</code></pre>

<p>type:</p>

<p>EV_KEY,键盘</p>

<p>EV_REL,相对坐标</p>

<p>EV_ABS,绝对坐标</p>

<p>value：</p>

<pre><code>  事件的值.如果事件的类型代码是EV_KEY,当按键按下时值为1,松开时值为0;如果事件的类型代码是EV_ REL,value的正数值和负数值分别代表两个不同方向的值.
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/*
</span><span class='line'>
</span><span class='line'>* Event types
</span><span class='line'>
</span><span class='line'>*/
</span><span class='line'>
</span><span class='line'>#define EV_SYN 0x00
</span><span class='line'>
</span><span class='line'>#define EV_KEY 0x01 //按键
</span><span class='line'>
</span><span class='line'>#define EV_REL 0x02 //相对坐标(轨迹球)
</span><span class='line'>
</span><span class='line'>#define EV_ABS 0x03 //绝对坐标
</span><span class='line'>
</span><span class='line'>#define EV_MSC 0x04 //其他
</span><span class='line'>
</span><span class='line'>#define EV_SW 0x05
</span><span class='line'>
</span><span class='line'>#define EV_LED 0x11 //LED
</span><span class='line'>
</span><span class='line'>#define EV_SND 0x12//声音
</span><span class='line'>
</span><span class='line'>#define EV_REP 0x14//repeat
</span><span class='line'>
</span><span class='line'>#define EV_FF 0x15 
</span><span class='line'>
</span><span class='line'>#define EV_PWR 0x16
</span><span class='line'>
</span><span class='line'>#define EV_FF_STATUS 0x17
</span><span class='line'>
</span><span class='line'>#define EV_MAX 0x1f
</span><span class='line'>
</span><span class='line'>#define EV_CNT (EV_MAX+1)</span></code></pre></td></tr></table></div></figure>


<p>上面是原理部分，下面是一段程序代码，主要功能是系统进入登陆界面之后，在服务器本地执行登陆，通过组合键，实现一些服务器断网之后的操作。</p>

<p>计划任务：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>crontab -e
</span><span class='line'>*/1 * * * * bash Cycle.sh</span></code></pre></td></tr></table></div></figure>


<p>程序功能介绍：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>4  --------------》编译之后的程序，主要用来执行键盘输入的动作
</span><span class='line'>4.c--------------》C的源码文件
</span><span class='line'>setup.sh---------》将字符串转换成4能够识别的整数
</span><span class='line'>Cycle.sh---------》计划任务的文件，也是保存服务器密码的地方，需要加密</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>filename：4.c
</span><span class='line'>#include &lt;string.h&gt;
</span><span class='line'>#include &lt;stdio.h&gt;
</span><span class='line'>#include &lt;sys/types.h&gt;
</span><span class='line'>#include &lt;sys/stat.h&gt;
</span><span class='line'>#include &lt;fcntl.h&gt;
</span><span class='line'>#include &lt;linux/input.h&gt;
</span><span class='line'>#include &lt;linux/uinput.h&gt;
</span><span class='line'>#include &lt;stdio.h&gt;
</span><span class='line'>#include &lt;sys/time.h&gt;
</span><span class='line'>#include &lt;sys/types.h&gt;
</span><span class='line'>#include &lt;unistd.h&gt;
</span><span class='line'>
</span><span class='line'>void input_car(int fd,int cha){
</span><span class='line'>        struct input_event event;
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.value = 1;
</span><span class='line'>        event.code = cha;
</span><span class='line'>        gettimeofday(&event.time,0);
</span><span class='line'>        write(fd,&event,sizeof(event)) ;
</span><span class='line'>         memset(&event, 0, sizeof(event));
</span><span class='line'>        gettimeofday(&event.time, NULL);
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.code = cha;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void simulate_ctrl_space(int fd)
</span><span class='line'>{
</span><span class='line'>
</span><span class='line'>        struct input_event event;
</span><span class='line'>
</span><span class='line'>     //先发送一个 CTRL 按下去的事件。
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.value = 1;
</span><span class='line'>        event.code = KEY_LEFTCTRL;
</span><span class='line'>        gettimeofday(&event.time,0);
</span><span class='line'>        write(fd,&event,sizeof(event)) ;
</span><span class='line'>
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>     //先发送一个 SPACE 按下去的事件。
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.value = 1;
</span><span class='line'>        event.code = KEY_A;
</span><span class='line'>        gettimeofday(&event.time,0);
</span><span class='line'>        write(fd,&event,sizeof(event)) ;
</span><span class='line'>
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>        
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.value = 1;
</span><span class='line'>        event.code = KEY_D;
</span><span class='line'>        gettimeofday(&event.time,0);
</span><span class='line'>        write(fd,&event,sizeof(event)) ;
</span><span class='line'>    
</span><span class='line'>     //发送一个 释放 SPACE 的事件 
</span><span class='line'>        memset(&event, 0, sizeof(event));
</span><span class='line'>        gettimeofday(&event.time, NULL);
</span><span class='line'>        event.type = EV_KEY; 
</span><span class='line'>        event.code = KEY_D;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>        memset(&event, 0, sizeof(event));
</span><span class='line'>        gettimeofday(&event.time, NULL);
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.code = KEY_A;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>     //发送一个 释放 CTRL 的事件
</span><span class='line'>        memset(&event, 0, sizeof(event));
</span><span class='line'>        gettimeofday(&event.time, NULL);
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.code = KEY_LEFTCTRL;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void simulate(int fd)
</span><span class='line'>{
</span><span class='line'>
</span><span class='line'>        struct input_event event;
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.value = 1;
</span><span class='line'>        event.code = KEY_LEFTSHIFT;
</span><span class='line'>        gettimeofday(&event.time,0);
</span><span class='line'>        write(fd,&event,sizeof(event)) ;
</span><span class='line'>
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>     //先发送一个 SPACE 按下去的事件。
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.value = 1;
</span><span class='line'>        event.code = KEY_EQUAL;
</span><span class='line'>        gettimeofday(&event.time,0);
</span><span class='line'>        write(fd,&event,sizeof(event)) ;
</span><span class='line'>        
</span><span class='line'>         memset(&event, 0, sizeof(event));
</span><span class='line'>        gettimeofday(&event.time, NULL);
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.code = KEY_EQUAL;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>         memset(&event, 0, sizeof(event));
</span><span class='line'>        gettimeofday(&event.time, NULL);
</span><span class='line'>        event.type = EV_KEY;
</span><span class='line'>        event.code = KEY_LEFTSHIFT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        event.type = EV_SYN;
</span><span class='line'>        event.code = SYN_REPORT;
</span><span class='line'>        event.value = 0;
</span><span class='line'>        write(fd, &event, sizeof(event));        
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>int main(int argc,char *argv[])
</span><span class='line'>{
</span><span class='line'>    int fd_ts;
</span><span class='line'>    int va;
</span><span class='line'>    fd_ts = open("/dev/input/event1", O_RDWR);
</span><span class='line'>    if(fd_ts&lt;=0){
</span><span class='line'>        printf("error open mouse\n");
</span><span class='line'>        return -2;
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    va = atoi(argv[1]);
</span><span class='line'>    printf("%d\n",va);
</span><span class='line'>    if (va == 1000){
</span><span class='line'>        sleep(5);
</span><span class='line'>    }
</span><span class='line'>    if (va == 700){
</span><span class='line'>        simulate_ctrl_space(fd_ts);
</span><span class='line'>        close(fd_ts);
</span><span class='line'>    }
</span><span class='line'>    if (va == 800){
</span><span class='line'>        simulate(fd_ts);
</span><span class='line'>        close(fd_ts);
</span><span class='line'>    }
</span><span class='line'>    printf("%d\n",va);
</span><span class='line'>    input_car(fd_ts,va);
</span><span class='line'>    close(fd_ts);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>filename： Cycle.sh
</span><span class='line'>#!/bin/bash
</span><span class='line'>A=$(cat /proc/uptime|awk '{print $1}'|awk -F. '{print $1}')
</span><span class='line'>B=150
</span><span class='line'>D=60
</span><span class='line'>echo $A
</span><span class='line'>C=$(ps axu |grep java)
</span><span class='line'>if (((${A}&gt;${D})&&(${A}&lt;${B})))
</span><span class='line'>then
</span><span class='line'>if ((! -n$(ps aux |grep java|awk '{print $13}'))) 
</span><span class='line'>then
</span><span class='line'>bash setup.sh r o o t enter
</span><span class='line'>sleep 2
</span><span class='line'>bash setup.sh * * * * * * * * enter sleep s c r e e n enter sleep space
</span><span class='line'>bash setup.sh c d space a enter
</span><span class='line'>bash setup.sh j a v a space - j a r space b enter sleep
</span><span class='line'>bash setup.sh ctrl*a*b
</span><span class='line'>bash setup.sh s c r e e n enter sleep space
</span><span class='line'>bash setup.sh c d space a enter
</span><span class='line'>bash setup.sh j a v a space - j a r space b enter sleep
</span><span class='line'>bash setup.sh ctrl*a*b
</span><span class='line'>bash setup.sh ctrl*a*b
</span><span class='line'>else
</span><span class='line'>echo "OK"
</span><span class='line'>fi
</span><span class='line'>else
</span><span class='line'>echo "time is goning~"
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>filename：setup.sh
</span><span class='line'>#!/bin/bash
</span><span class='line'>
</span><span class='line'>KEY=KEY
</span><span class='line'>for i in $*;do
</span><span class='line'>value=$i
</span><span class='line'>CTRL=ctrl
</span><span class='line'>#echo $value &gt;/root/setup.log
</span><span class='line'>if [ "$value" == "sleep" ];then
</span><span class='line'>/root/4 1000
</span><span class='line'>fi
</span><span class='line'>if [ "$value" == "+" ];then 
</span><span class='line'>/root/4 800
</span><span class='line'>fi
</span><span class='line'>if [ "$value" == "-" ];then 
</span><span class='line'>/root/4 12
</span><span class='line'>fi
</span><span class='line'>if ((! -n $(echo $value|grep "*")))
</span><span class='line'>then
</span><span class='line'>#if [  ! -n  $(echo ${value}|grep +) ];then
</span><span class='line'>#/root/4 ctrlad
</span><span class='line'>#if [ "$value" == "ctrl" ];then
</span><span class='line'>#echo "OK"
</span><span class='line'>#value="leftctrl"
</span><span class='line'>#UPPERCASE=$(echo $value | tr '[a-z]' '[A-Z]')
</span><span class='line'>#key_i="${KEY}_${UPPERCASE}"
</span><span class='line'>#num=$(cat /usr/include/linux/input.h |grep "${key_i}\&gt;"|awk '{print $3}')
</span><span class='line'>#echo $num
</span><span class='line'>#/root/4 $num
</span><span class='line'>#echo $key_i
</span><span class='line'>#else
</span><span class='line'>UPPERCASE=$(echo $value | tr '[a-z]' '[A-Z]') 
</span><span class='line'>key_i="${KEY}_${UPPERCASE}"
</span><span class='line'>num1=$(cat /usr/include/linux/input.h |grep "${key_i}\&gt;"|awk '{print $3}')
</span><span class='line'>echo $num1
</span><span class='line'>/root/4 $num1
</span><span class='line'>echo $key_i
</span><span class='line'>#fi
</span><span class='line'>else 
</span><span class='line'>/root/4 700
</span><span class='line'>fi
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[POWERSHELL 获取虚拟机状态]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/powershell-huo-qu-xu-ni-ji-zhuang-tai/"/>
    <updated>2013-08-19T15:33:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/powershell-huo-qu-xu-ni-ji-zhuang-tai</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$allvms = @()
</span><span class='line'>$vms = Get-Vm
</span><span class='line'>foreach($vm in $vms){
</span><span class='line'>  $vmstat = "" | Select VmName, GuestName, NumCPU, ProvisionedSpaceGB, UsedSpaceGB, VmHost, MemMax, MemAvg, CPUMax, CPUAvg, DiskMax, DiskAvg 
</span><span class='line'>  $vmstat.VmName = $vm.name
</span><span class='line'>  $vmstat.GuestName = $vm.Guest.HostName 
</span><span class='line'>  $vmstat.NumCPU = $vm.NumCPU
</span><span class='line'>  $vmstat.ProvisionedSpaceGB = $vm.ProvisionedSpaceGB
</span><span class='line'>  $vmstat.UsedSpaceGB = $vm.UsedSpaceGB
</span><span class='line'>  $vmstat.VmHost = $vm.VMHost
</span><span class='line'>  
</span><span class='line'>  $statcpu = Get-Stat -Entity ($vm) `
</span><span class='line'>           -start (get-date).AddDays(-30) `
</span><span class='line'>           -Finish (Get-Date) `
</span><span class='line'>             -stat cpu.usagemhz.average
</span><span class='line'>  $statmem = Get-Stat -Entity ($vm) `
</span><span class='line'>           -Start (get-date).AddDays(-30) `
</span><span class='line'>           -Finish (Get-Date) `
</span><span class='line'>             -stat mem.consumed.average
</span><span class='line'>  $statdisk = Get-Stat -Entity ($vm) `
</span><span class='line'>           -Start (get-date).AddDays(-30) `
</span><span class='line'>           -Finish (Get-Date) `
</span><span class='line'>             -stat disk.usage.average
</span><span class='line'>
</span><span class='line'>  $cpu = $statcpu | Measure-Object -Property value -Average -Maximum
</span><span class='line'>  $mem = $statmem | Measure-Object -Property value -Average -Maximum
</span><span class='line'>  $disk = $statdisk | Measure-Object -Property value -Average -Maximum
</span><span class='line'>  
</span><span class='line'>  $vmstat.CPUMax = $cpu.Maximum
</span><span class='line'>  $vmstat.CPUAvg = $cpu.Average
</span><span class='line'>  $vmstat.MemMax = $mem.Maximum
</span><span class='line'>  $vmstat.MemAvg = $mem.Average
</span><span class='line'>  $vmstat.DiskMax = $disk.Maximum
</span><span class='line'>  $vmstat.DiskAvg = $disk.Average
</span><span class='line'>  
</span><span class='line'>  $allvms += $vmstat
</span><span class='line'>}
</span><span class='line'>$allvms | Export-Csv "VMs.csv" -noTypeInformation -UseCulture</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[POWERCLI 虚拟机简单状态报告]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/powercli-xu-ni-ji-jian-dan-zhuang-tai-bao-gao/"/>
    <updated>2013-08-19T15:17:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/powercli-xu-ni-ji-jian-dan-zhuang-tai-bao-gao</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$vms = get-vm|where {$_.name -like "XG*"}
</span><span class='line'>$metrics = "cpu.usagemhz.average","mem.usage.average","cpu.usagemhz.minimum","mem.usage.minimum","cpu.usagemhz.maximum","mem.usage.maximum"
</span><span class='line'>$start = Get-Date -Hour 7 -Minute 0 -Second 0 -Day 7 -Month 8 -Year 2012
</span><span class='line'>$finish = Get-Date -Hour 11 -Minute 0 -Second 0 -Day 9 -Month 8 -Year 2012
</span><span class='line'>Get-Stat -Entity ($vms) -Stat $metrics -Start $start -Finish $finish |
</span><span class='line'>Group-Object -Property EntityId,Timestamp | %{
</span><span class='line'>  New-Object PSObject -Property @{
</span><span class='line'>    VMName = $_.Group[0].Entity.Name
</span><span class='line'>    Date = $_.Group[0].Timestamp.ToLongDateString()
</span><span class='line'>    Time = $_.Group[0].Timestamp.ToLongTimeString()
</span><span class='line'>    MemMax = $_.Group | where {$_.MetricId -eq "mem.usage.maximum"} | Select -ExpandProperty Value
</span><span class='line'>    MemAvg = $_.Group | where {$_.MetricId -eq "mem.usage.average"} | Select -ExpandProperty Value
</span><span class='line'>    MemMin = $_.Group | where {$_.MetricId -eq "mem.usage.minimum"} | Select -ExpandProperty Value
</span><span class='line'>    CpuMax = $_.Group | where {$_.MetricId -eq "cpu.usagemhz.maximum"} | Select -ExpandProperty Value
</span><span class='line'>    CpuMin = $_.Group | where {$_.MetricId -eq "cpu.usagemhz.minimum"} | Select -ExpandProperty Value
</span><span class='line'>    CpuAvg = $_.Group | where {$_.MetricId -eq "cpu.usagemhz.average"} | Select -ExpandProperty Value
</span><span class='line'>    NetMax = $_.Group | where {$_.MetricId -eq "net.usage.maximum" -and $_.Instance -eq ""} | Select -ExpandProperty Value
</span><span class='line'>    NetMin = $_.Group | where {$_.MetricId -eq "net.usage.minimum" -and $_.Instance -eq ""} | Select -ExpandProperty Value
</span><span class='line'>    NetAvg = $_.Group | where {$_.MetricId -eq "net.usage.average" -and $_.Instance -eq ""} | Select -ExpandProperty Value
</span><span class='line'>  }
</span><span class='line'>  } |Export-Csv D:\vmreport.csv -NoTypeInformation -UseCulture</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[shell +批出脚本 跨平台 日志筛选 插入数据库]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/shell-plus-pi-chu-jiao-ben-kua-ping-tai-ri-zhi-shai-xuan-cha-ru-shu-ju-ku/"/>
    <updated>2013-08-19T14:31:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/shell-plus-pi-chu-jiao-ben-kua-ping-tai-ri-zhi-shai-xuan-cha-ru-shu-ju-ku</id>
    <content type="html"><![CDATA[<p>最近平台某个功能无法实现了，在中间件里面查看日志，发现有报错日志，将脚本单独提出来执行，发现数据的精度超出字段的定义，数据库为mysql，没有数据库表字典无法确定该字段含义，且修改数据库有风险，所以选择折中方案。</p>

<pre><code>中间件运行在windows平台下，数据库在linux下，为了锻炼批处理和shell的能力，选择一个比较复杂的方案：
1.在中间件服务器上面运行批处理，判断文件的日期，将特定日期的日志复制到共享文件夹
2.在linux服务器上面运行shell脚本，每隔10S从共享文件夹中获取数据，并且截取字符串就行二次拼接，将语句就行存储，同时往数据库里面插入数据。
日志文件如下：
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-05-02 13:12:28: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:12:58: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:13:27: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:13:58: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:14:17: CADODatabase::ExecuteSQL Fail,_strSql:call TF_PhotoIndex_ADD( 2382430263,80,0,'2013-5-2 13:13:50',1948.386880,671.940920,1,2,1,22,'289723281_604_0_24.jpg' );
</span><span class='line'>2013-05-02 13:14:27: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:14:58: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:15:28: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:15:57: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:16:28: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:16:57: ExcuteStoByConn , _pDB-&gt;IsEOF()
</span><span class='line'>2013-05-02 13:17:28: ExcuteStoByConn , _pDB-&gt;IsEOF()</span></code></pre></td></tr></table></div></figure>


<pre><code> 下面为具体代码：
     批处理echo.bat
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@echo off
</span><span class='line'>setlocal
</span><span class='line'>cls
</span><span class='line'>color f0
</span><span class='line'>mode con: cols=20 lines=5
</span><span class='line'>title Plugin
</span><span class='line'>@echo off&&setlocal enabledelayedexpansion
</span><span class='line'>:en
</span><span class='line'>for /f "delims=" %%i in ('dir /a-d /b *.log') do (
</span><span class='line'>for /f "tokens=1 delims=:" %%t in ('time /T') do set houre=%%t
</span><span class='line'>set timefile=DBExcp%date:~0,4%%date:~5,2%%date:~8,2%-!houre!.log
</span><span class='line'>set filename=%%i
</span><span class='line'>if "!filename!"=="!timefile!" ( 
</span><span class='line'>set size=%%~zi
</span><span class='line'>copy %%i z:\DBExcp%date:~0,4%%date:~5,2%%date:~8,2%-!houre!-%time:~3,2%-%time:~6,2%.log )else echo NO
</span><span class='line'>)
</span><span class='line'>ping -n 20 127.0.0.1&gt;nul
</span><span class='line'>goto en</span></code></pre></td></tr></table></div></figure>


<p>linux下挂载共享文件夹</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mount //10.10.3.215/log_bak /mnt/log_bak/ -o username=administrator,password=****************</span></code></pre></td></tr></table></div></figure>


<p>记得需要安装文件系统包</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>683 sudo apt-get install nfs-common
</span><span class='line'>737 sudo apt-get install smbfs</span></code></pre></td></tr></table></div></figure>


<p>linux下循环运行脚本</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@ubuntu:~/22# more ADD_tf_photo_index.sh 
</span><span class='line'>#!/bin/sh
</span><span class='line'>
</span><span class='line'>while true
</span><span class='line'>
</span><span class='line'>do
</span><span class='line'>
</span><span class='line'>rm -rf /root/22/*.log
</span><span class='line'>
</span><span class='line'>mv /mnt/log_bak/*.log /root/22/
</span><span class='line'>
</span><span class='line'>cat /root/22/*.log|grep TF_PhotoIndex_ADD|awk -F '(' '{printf $2 "\n"}'&gt;&gt;/root/22/1.txt
</span><span class='line'>
</span><span class='line'>while read line
</span><span class='line'>do
</span><span class='line'>echo $line|awk -F ',' 'BEGIN{OFS=","}{$5=0;$6=0}END{print $0 "\n"}'&gt;&gt;/root/22/some
</span><span class='line'>done &lt; /root/22/1.txt
</span><span class='line'>
</span><span class='line'>rm -rf 1.txt
</span><span class='line'>
</span><span class='line'>sed '/^ *$/d' /root/22/some &gt;&gt;two
</span><span class='line'>
</span><span class='line'>echo "use txserver;"&gt;&gt;sql
</span><span class='line'>echo "use txserver;"&gt;&gt;sql0
</span><span class='line'>
</span><span class='line'>while read line_two
</span><span class='line'>do
</span><span class='line'>echo "call TF_PhotoIndex_ADD( $line_two"&gt;&gt;sql
</span><span class='line'>echo "call TF_PhotoIndex_ADD( $line_two"&gt;&gt;sql0
</span><span class='line'>done &lt; /root/22/two
</span><span class='line'>
</span><span class='line'>mysql -h10.10.3.6 -uroot -p********* &lt;/root/22/sql0
</span><span class='line'>rm -rf some two sql0
</span><span class='line'>sleep 10s
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql ERROR 1289 (HY000)]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/mysql-error-1289-hy000/"/>
    <updated>2013-08-19T14:30:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/mysql-error-1289-hy000</id>
    <content type="html"><![CDATA[<p>在安装mysql 5.1.68的时候，导入数据的时候报一下错误：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ERROR 1289 (HY000): The 'partitioning' feature is disabled; you need MySQL built with '--with-partition' to have it working</span></code></pre></td></tr></table></div></figure>


<p>同时该业务库还是需要支持GBK的，所以在源码安装configure的时候需要加上编码和分区表的选项，我在网上看帖子也有用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--with-plugins=max</span></code></pre></td></tr></table></div></figure>


<p>自己装的时候没有用，用的一下选项</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./configure --prefix=/usr/local/mysql  --datadir=/videodata/mysqldata/data --with-partition --with-extra-charsets=all  --with-charset=gbk --with-charset=utf8</span></code></pre></td></tr></table></div></figure>


<p>会报一下警告，但是MAKE之后报错的脚本已经插到库里面了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>configure: WARNING: Unrecognized options:</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Openstack]Network FlatDHCP can not ping host]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/openstack-network-flatdhcp-can-not-ping-host/"/>
    <updated>2013-08-19T14:29:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/openstack-network-flatdhcp-can-not-ping-host</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>12.10: adjust /etc/rc.local to add a firewall rule for use with FlatDHCPManager:
</span><span class='line'>
</span><span class='line'>adjust /etc/rc.local to have (before the call to exit):
</span><span class='line'>
</span><span class='line'>/sbin/iptables -A POSTROUTING -t mangle -p udp --dport 68 -j CHECKSUM --checksum-fill
</span><span class='line'>make /etc/rc.local executable:
</span><span class='line'>
</span><span class='line'>$ sudo chmod 755 /etc/rc.local
</span><span class='line'>
</span><span class='line'>Note: run the iptables command manually before trying to start guests</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Openstack]CRITICAL nova [-]]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/openstack-critical-nova/"/>
    <updated>2013-08-19T14:28:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/openstack-critical-nova</id>
    <content type="html"><![CDATA[<p>/var/log/nova/nova-computer.log</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Cannot get interface MTU on 'br100': No such device</span></code></pre></td></tr></table></div></figure>


<p>在nova.conf中添加如下节点，让实例自动启动</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--start_guests_on_host_boot=true
</span><span class='line'>--resume_guests_state_on_host_boot=true</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[svn 添加新用户脚本]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/svn-tian-jia-xin-yong-hu-jiao-ben/"/>
    <updated>2013-08-19T14:26:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/svn-tian-jia-xin-yong-hu-jiao-ben</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#! /bin/sh
</span><span class='line'>date
</span><span class='line'>echo '*******************************************************************'
</span><span class='line'>echo 'Svn add new user'
</span><span class='line'>echo 'zhuhuijunzhj@126.com'
</span><span class='line'>echo '*******************************************************************'
</span><span class='line'>for ID in $(cat UserList)
</span><span class='line'>do
</span><span class='line'>echo User:@$ID@ is about to be created ......
</span><span class='line'>echo ' '
</span><span class='line'>svnadmin create --fs-type fsfs /etc/svn/$ID 
</span><span class='line'>echo Configuration directory permissions .....
</span><span class='line'>chown -R www-data:subversion /etc/svn/$ID
</span><span class='line'>chmod -R g+rws /etc/svn/$ID
</span><span class='line'>PASS=$(sudo cat /dev/urandom | sed 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
</span><span class='line'>echo -n $ID &gt;&gt;1
</span><span class='line'>echo " $PASS" &gt;&gt;1
</span><span class='line'>echo ' '
</span><span class='line'>echo Add User Information ......
</span><span class='line'>htpasswd -b /etc/subversion/dav_svn.passwd $ID $PASS
</span><span class='line'>echo ' '
</span><span class='line'>echo "[$ID:/]" &gt;&gt;/etc/subversion/dav_svn.authz
</span><span class='line'>echo "$ID = rw" &gt;&gt;/etc/subversion/dav_svn.authz
</span><span class='line'>echo "zhuhuijun = rw" &gt;&gt;/etc/subversion/dav_svn.authz
</span><span class='line'>echo "* =" &gt;&gt;/etc/subversion/dav_svn.authz
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【proxmox】重复删除之后，克隆脚本]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/%5B%28proxmox%29%5D-zhong-fu-shan-chu-zhi-hou-%2Cke-long-jiao-ben/"/>
    <updated>2013-08-19T14:25:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/[(proxmox)]-zhong-fu-shan-chu-zhi-hou-,ke-long-jiao-ben</id>
    <content type="html"><![CDATA[<p>由于重复删除ID号之后 ，会出现镜像文件夹重名的问题
新脚本中加入判断条件，这里如果符合目录存在的条件，则输出信息并推出克隆，这边也可以自己定义操作脚本。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>image_dir="/var/lib/vz/images/"
</span><span class='line'>conf_dir="/etc/pve/nodes/dtt/qemu-server/"
</span><span class='line'>source_vm_id=$1
</span><span class='line'>dest_vm_id=$2
</span><span class='line'>vm_name=$3
</span><span class='line'>dest_vm_file="/vm-$dest_vm_id-disk-1.qcow2"
</span><span class='line'>source_vm_file="/vm-$source_vm_id-disk-1.qcow2"
</span><span class='line'>random_mac_addr="2A:AB:$(dd if=/dev/urandom count=1 2&gt;/dev/null | md5sum |sed 's/^\(..\)\(..\)\(..\)\(..\).*$/\1:\2:\3:\4/')"
</span><span class='line'>
</span><span class='line'>tmp_conf="/tmp/"$dest_vm_id".txt"
</span><span class='line'>cat $conf_dir$source_vm_id".conf" &gt; $tmp_conf
</span><span class='line'>sed -i -e 's/'${source_vm_id}'/'${dest_vm_id}'/g' $tmp_conf
</span><span class='line'>sed -i -e "s/e1000=\S\+,/e1000=$random_mac_addr,/" $tmp_conf
</span><span class='line'>sed -i -e "s/name: \S\+/name: $vm_name/" $tmp_conf
</span><span class='line'>cat $tmp_conf &gt; $conf_dir$dest_vm_id".conf"
</span><span class='line'>
</span><span class='line'>if [ ! -d "$image_dir$dest_vm_id" ];then
</span><span class='line'>cp -r $image_dir$source_vm_id $image_dir$dest_vm_id
</span><span class='line'>mv $image_dir$dest_vm_id$source_vm_file $image_dir$dest_vm_id$dest_vm_file
</span><span class='line'>else
</span><span class='line'>echo "The directory already exists:"$image_dir$dest_vm_id
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何防恶意解析，禁止用IP访问网站的Apache设置？]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/ru-he-fang-e-yi-jie-xi-%2Cjin-zhi-yong-ipfang-wen-wang-zhan-de-apacheshe-zhi-%3F/"/>
    <updated>2013-08-19T14:19:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/ru-he-fang-e-yi-jie-xi-,jin-zhi-yong-ipfang-wen-wang-zhan-de-apacheshe-zhi-?</id>
    <content type="html"><![CDATA[<p>一般来说，网站可以用域名和IP来访问。你的网站可以通过IP直接访问，本来这没什么问题，但是会有些隐患：</p>

<p>由于搜索引擎也会收录你的IP地址的页面，所以同一个页面搜索引擎会重复收录，造成页面的权重不如单个收录高。</p>

<p>域名恶意指向的可能。还记得去年还是前年的 google.com.sb 事件吗？google.com.sb 这个域名被恶意指向了百度，后来证实了 google.com.sb 这个域名为第三者恶意指向的，并不是Google所为。当然这只是个玩笑，但是如果被人恶意用别的域名解析到你的IP的话，那么你的网站就能通过别人的域名来访问了。接下来会发生什么？假如那域名是不友善的域名，比如曾经指向非法网站，容易引发搜索引擎惩罚，连带IP受到牵连。即使域名没什么问题，但流量也会被劫持到别的域名，从而遭到广告联盟的封杀。</p>

<p>如何解决这个问题？最直接的方法是让用户只能通过域名来访问网站，而不能通过IP来直接访问。这个可以修改Apache配置文件httpd.conf来实现。下面是小站的实现：</p>

<!-- more -->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NameVirtualHost 121.*.*.* 
</span><span class='line'>&lt;VirtualHost 121.*.*.*&gt; 
</span><span class='line'>ServerName 121.*.*.* 
</span><span class='line'>&lt;Location /&gt; 
</span><span class='line'>Order Allow,Deny 
</span><span class='line'>Deny from all 
</span><span class='line'>&lt;/Location&gt; 
</span><span class='line'>&lt;/VirtualHost&gt; 
</span><span class='line'>&lt;VirtualHost 121.*.*.*&gt; 
</span><span class='line'>DocumentRoot /var/www/nowamagic/ 
</span><span class='line'>ServerName www.nowamagic.net 
</span><span class='line'>&lt;/VirtualHost&gt; 
</span><span class='line'>&lt;VirtualHost 121.*.*.*&gt; 
</span><span class='line'>DocumentRoot /var/www/nowamagic/ 
</span><span class='line'>ServerName nowamagic.net 
</span><span class='line'>&lt;/VirtualHost&gt;</span></code></pre></td></tr></table></div></figure>


<p>第一部分代码是实现拒绝直接通过 121.<em>.</em>.<em> 这个IP的任何访问请求，这时如果你用 121.</em>.<em>.</em> 访问，会提示拒绝访问。</p>

<p>第二部分代码就是允许通过 <a href="http://www.nowamagic.net/">http://www.nowamagic.net/</a> 这个域名访问，主目录指向 /var/www/nowamagic/ （这里服务器OS是 CentOS）。</p>

<p>第三部分代码是允许不带 www 的域名访问，应该能和上面的合并一起写吧。</p>

<p>在这里记录下，方便以后信手拈来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Nginx负载均衡Openstack对象存储swift]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/yong-nginxfu-zai-jun-heng-openstackdui-xiang-cun-chu-swift/"/>
    <updated>2013-08-19T14:15:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/yong-nginxfu-zai-jun-heng-openstackdui-xiang-cun-chu-swift</id>
    <content type="html"><![CDATA[<p>此文为用Nginx实现负载均衡Openstack对象存储swift多代理的配置</p>

<p>1、下载Nginx</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">cd</span> <span class="o">/</span><span class="nx">usr</span><span class="o">/</span><span class="nx">local</span><span class="o">/</span><span class="nx">src</span><span class="o">/</span>
</span><span class='line'>
</span><span class='line'><span class="nx">wget</span> <span class="o">-</span><span class="nx">S</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//nginx.org/download/nginx-1.2.6.tar.gz</span>
</span></code></pre></td></tr></table></div></figure>


<p>2、创建用户</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">useradd</span> <span class="o">-</span><span class="nx">c</span> <span class="s2">&quot;Nginx User&quot;</span> <span class="o">-</span><span class="nx">s</span> <span class="o">/</span><span class="nx">sbin</span><span class="o">/</span><span class="nx">nologin</span> <span class="o">-</span><span class="nx">r</span> <span class="o">-</span><span class="nx">d</span> <span class="o">/</span><span class="kd">var</span><span class="err">/lib/nginx nginx </span>
</span></code></pre></td></tr></table></div></figure>


<p>3、安装Nginx</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">tar</span> <span class="nx">xzvf</span> <span class="nx">nginx</span><span class="o">-</span><span class="mf">1.2</span><span class="p">.</span><span class="mi">6</span><span class="p">.</span><span class="nx">tar</span><span class="p">.</span><span class="nx">gz</span>
</span><span class='line'>
</span><span class='line'><span class="nx">cd</span> <span class="nx">nginx</span><span class="o">-</span><span class="mf">1.2</span><span class="p">.</span><span class="mi">6</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->




<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">.</span><span class="o">/</span><span class="nx">configure</span> <span class="o">\</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">user</span><span class="o">=</span><span class="nx">nginx</span> <span class="o">\</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">group</span><span class="o">=</span><span class="nx">nginx</span> <span class="o">\</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">prefix</span><span class="o">=</span><span class="err">/usr/share \</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">sbin</span><span class="o">-</span><span class="nx">path</span><span class="o">=</span><span class="err">/usr/sbin/nginx \</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">conf</span><span class="o">-</span><span class="nx">path</span><span class="o">=</span><span class="err">/etc/nginx/nginx.conf \</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">error</span><span class="o">-</span><span class="nx">log</span><span class="o">-</span><span class="nx">path</span><span class="o">=</span><span class="err">/var/log/nginx/error.log \</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">http</span><span class="o">-</span><span class="nx">log</span><span class="o">-</span><span class="nx">path</span><span class="o">=</span><span class="err">/var/log/nginx/access.log \</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">pid</span><span class="o">-</span><span class="nx">path</span><span class="o">=</span><span class="err">/var/log/run/nginx.pid \</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">lock</span><span class="o">-</span><span class="nx">path</span><span class="o">=</span><span class="err">/var/log/lock/subsys/nginx \</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="kd">with</span><span class="o">-</span><span class="nx">http_stub_status_module</span> <span class="o">\</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="nx">without</span><span class="o">-</span><span class="nx">poll_module</span> <span class="o">\</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="kd">with</span><span class="o">-</span><span class="nx">http_gzip_static_module</span> <span class="o">\</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="kd">with</span><span class="o">-</span><span class="nx">http_realip_module</span> <span class="o">\</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">--</span><span class="kd">with</span><span class="o">-</span><span class="nx">http_ssl_module</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">make</span>
</span><span class='line'><span class="nx">make</span> <span class="nx">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>4、修改配置文件/etc/nginx/nginx.conf</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">cat</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">nginx</span><span class="o">/</span><span class="nx">nginx</span><span class="p">.</span><span class="nx">conf</span> <span class="o">|</span> <span class="nx">grep</span> <span class="o">-</span><span class="nx">v</span> <span class="o">^</span><span class="nx">$</span> <span class="o">|</span> <span class="nx">grep</span> <span class="o">-</span><span class="nx">v</span> <span class="p">.</span><span class="o">*</span><span class="err">#</span>
</span><span class='line'>
</span><span class='line'><span class="nx">worker_processes</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">events</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="nx">worker_connections</span> <span class="mi">1024</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">http</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="nx">include</span> <span class="nx">mime</span><span class="p">.</span><span class="nx">types</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">default_type</span> <span class="nx">application</span><span class="o">/</span><span class="nx">octet</span><span class="o">-</span><span class="nx">stream</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">sendfile</span> <span class="nx">on</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">keepalive_timeout</span> <span class="mi">65</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">client_max_body_size</span> <span class="mi">6024</span><span class="nx">M</span><span class="p">;</span> <span class="err">#限制用户上传大小</span>
</span><span class='line'>
</span><span class='line'><span class="nx">proxy_ignore_client_abort</span> <span class="nx">on</span><span class="p">;</span> <span class="err">#解决</span><span class="mi">499</span><span class="err">错误，意思是代理服务器不要主动关闭客户端连接</span>
</span><span class='line'>
</span><span class='line'><span class="nx">upstream</span> <span class="nx">swift</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="nx">server</span> <span class="mf">192.168</span><span class="p">.</span><span class="mf">100.7</span><span class="o">:</span><span class="mi">8080</span><span class="p">;</span> <span class="err">#此次</span><span class="nx">ip</span><span class="err">为</span><span class="nx">proxy</span><span class="err">的</span><span class="nx">swift</span> <span class="nx">ip</span>
</span><span class='line'>
</span><span class='line'><span class="nx">server</span> <span class="mf">192.168</span><span class="p">.</span><span class="mf">100.8</span><span class="o">:</span><span class="mi">8080</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">server</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="nx">listen</span> <span class="mi">8080</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">server_name</span> <span class="nx">swift</span><span class="p">;</span> <span class="err">#主机名称</span>
</span><span class='line'>
</span><span class='line'><span class="nx">location</span> <span class="o">/</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="nx">proxy_pass</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//swift/; #upstream 一致</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">error_page</span> <span class="mi">500</span> <span class="mi">502</span> <span class="mi">503</span> <span class="mi">504</span> <span class="o">/</span><span class="mi">50</span><span class="nx">x</span><span class="p">.</span><span class="nx">html</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">location</span> <span class="o">=</span> <span class="err">/50x.html {</span>
</span><span class='line'>
</span><span class='line'><span class="nx">root</span> <span class="nx">html</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>5、启动Nginx</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">/usr/sbin/nginx</span>
</span><span class='line'>
</span><span class='line'><span class="nx">netstat</span> <span class="o">-</span><span class="nx">ltunp</span> <span class="o">|</span> <span class="nx">grep</span> <span class="mi">8080</span>
</span></code></pre></td></tr></table></div></figure>


<p>备注：记得只需要在endpoint里指向nginx服务器地址信息，其它proxy节点不需要指定。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python用cx_Oracle模块连接数据库]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/pythonyong-cx-oraclemo-kuai-lian-jie-shu-ju-ku/"/>
    <updated>2013-08-19T13:45:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/pythonyong-cx-oraclemo-kuai-lian-jie-shu-ju-ku</id>
    <content type="html"><![CDATA[<p>在的时候可能会报这些错误</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">ImportError</span><span class="o">:</span> <span class="nx">libclntsh</span><span class="p">.</span><span class="nx">so</span><span class="p">.</span><span class="mf">11.1</span><span class="o">:</span> <span class="nx">cannot</span> <span class="nx">open</span> <span class="nx">shared</span> <span class="nx">object</span> <span class="nx">file</span><span class="o">:</span> <span class="nx">No</span> <span class="nx">such</span> <span class="nx">file</span> <span class="nx">or</span> <span class="nx">directory</span>
</span></code></pre></td></tr></table></div></figure>


<p>那么需要在LD_LIBRARY_PATH中指定那些库的所在，典型是在下面</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">LD_LIBRARY_PATH</span><span class="o">=</span><span class="nx">$ORACLE_HOME</span><span class="o">/</span><span class="nx">lib</span><span class="o">:</span><span class="err">/usr/lib:/usr/local/lib</span>
</span></code></pre></td></tr></table></div></figure>


<p>在的时候可能会报这些错误</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">cx_Oracle</span><span class="p">.</span><span class="nx">InterfaceError</span><span class="o">:</span> <span class="nx">Unable</span> <span class="nx">to</span> <span class="nx">acquire</span> <span class="nx">Oracle</span> <span class="nx">environment</span> <span class="nx">handle</span>
</span></code></pre></td></tr></table></div></figure>


<p>下载\instantclient_10_2</p>

<!-- more -->


<p>然后把里面的动态链接库都复制到C:\Python27\Lib\site-packages下</p>

<p>在的时候可能会报这些错误</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s1">&#39;&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Created on 2013-8-2</span>
</span><span class='line'>
</span><span class='line'><span class="s1">@author: Sun</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&#39;&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="kr">import</span> <span class="nx">cx_Oracle</span> <span class="nx">as</span> <span class="nx">oracle</span>
</span><span class='line'>
</span><span class='line'><span class="nx">usr</span> <span class="o">=</span> <span class="s2">&quot;****&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">pwd</span> <span class="o">=</span> <span class="s2">&quot;****&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">host</span> <span class="o">=</span> <span class="s2">&quot;10.10.7.62&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">port</span> <span class="o">=</span> <span class="s2">&quot;1521&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">sid</span> <span class="o">=</span> <span class="s2">&quot;*******&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">dsn</span> <span class="o">=</span> <span class="nx">oracle</span><span class="p">.</span><span class="nx">makedsn</span><span class="p">(</span><span class="nx">host</span><span class="p">,</span><span class="nx">port</span><span class="p">,</span><span class="nx">sid</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="nx">con</span> <span class="o">=</span> <span class="nx">oracle</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">usr</span><span class="p">,</span><span class="nx">pwd</span><span class="p">,</span><span class="nx">host</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="nx">port</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">sid</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">con</span> <span class="o">=</span> <span class="nx">oracle</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">usr</span><span class="p">,</span><span class="nx">pwd</span><span class="p">,</span><span class="nx">dsn</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">print</span> <span class="s2">&quot;Oracle &quot;</span> <span class="o">+</span> <span class="nx">con</span><span class="p">.</span><span class="nx">version</span>
</span><span class='line'>
</span><span class='line'><span class="nx">con</span><span class="p">.</span><span class="nx">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PROXMOX安装 及批量部署脚本]]></title>
    <link href="http://Ghostbaby.github.io/blog/2013/08/19/proxmoxan-zhuang-ji-pi-liang-bu-shu-jiao-ben/"/>
    <updated>2013-08-19T08:35:00+08:00</updated>
    <id>http://Ghostbaby.github.io/blog/2013/08/19/proxmoxan-zhuang-ji-pi-liang-bu-shu-jiao-ben</id>
    <content type="html"><![CDATA[<p>OS安装没有什么好讲的，主要说下，系统装完之后的一些注意点。</p>

<p>1.在安装系统的时候，服务器接显示屏的时候，不要用视频延长线，用显示器的自带的视频线，系统安装完毕之后，重启过程中，分辨率有一个调整的过程，从低分辨率跳到高分辨率，老视频线可能无法自适应，就会出现黑屏的现象，没有办法分辨系统安装准确与否。这边有人要问了，系统安装的时候不是配置了IP地址吗，只要配置准确，就直接可以SSH连进系统了吗？看第二个注意点。</p>

<p>2.在VM上安装安装的时候不会出现我下面说的问题，在物理服务器的时钟有可能不是当前时间，安装完系统之后，第一次重启服务器，在加载内核文件的时候，会报错时间戳，系统时间早于文件创建时间，系统进入READ-ONLY模式，目前这种问题出现在HP服务器，PVE2.0版本上，其他品牌服务器有待验证。在read-only模式下，网卡是启动不了的，所以SSH也没有打开，如果同时出现第一个问题，很难排查。所以第一个，第二个问题上面一起说下。</p>

<p>3.PROXMOX控制台的console功能是基于JAVA开发的，在第一次进入控制台的时候，记得安装需要的插件，平台会提醒你安装的。
PROXMOX做集群之后，登陆主控机的控制台可以管理集群下所有节点下虚拟机，反之在节点控制台上只能管理该节点下的终端。</p>

<p>4.proxmox官方是没有提供克隆功能的，或者将批量创建虚拟机，下面贴出目前我们用的批量创建的脚本。</p>

<!-- more -->


<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span><span class="o">!</span><span class="err">/bin/bash</span>
</span><span class='line'><span class="nx">image_dir</span><span class="o">=</span><span class="s2">&quot;/var/lib/vz/images/&quot;</span>
</span><span class='line'><span class="nx">conf_dir</span><span class="o">=</span><span class="s2">&quot;/etc/pve/nodes/server9/qemu-server/&quot;</span>
</span><span class='line'><span class="nx">source_vm_id</span><span class="o">=</span><span class="nx">$1</span>
</span><span class='line'><span class="nx">dest_vm_id</span><span class="o">=</span><span class="nx">$2</span>
</span><span class='line'><span class="nx">dest_vm_file</span><span class="o">=</span><span class="s2">&quot;/vm-$dest_vm_id-disk-1.qcow2&quot;</span>
</span><span class='line'><span class="nx">source_vm_file</span><span class="o">=</span><span class="s2">&quot;/vm-$source_vm_id-disk-1.qcow2&quot;</span>
</span><span class='line'><span class="nx">random_mac_addr</span><span class="o">=</span><span class="s2">&quot;52:54:$(dd if=/dev/urandom count=1 2&gt;/dev/null | md5sum |sed &#39;s/^\(..\)\(..\)\(..\)\(..\).*$/\1:\2:\3:\4/&#39;)&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">tmp_conf</span><span class="o">=</span><span class="s2">&quot;/tmp/&quot;</span><span class="nx">$dest_vm_id</span><span class="s2">&quot;.txt&quot;</span>
</span><span class='line'><span class="nx">cat</span> <span class="nx">$conf_dir$source_vm_id</span><span class="s2">&quot;.conf&quot;</span> <span class="o">&gt;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s1">&#39;s/&#39;</span><span class="nx">$</span><span class="p">{</span><span class="nx">source_vm_id</span><span class="p">}</span><span class="s1">&#39;/&#39;</span><span class="nx">$</span><span class="p">{</span><span class="nx">dest_vm_id</span><span class="p">}</span><span class="s1">&#39;/g&#39;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s2">&quot;s/virtio=\S\+,/virtio=$random_mac_addr,/&quot;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">cat</span> <span class="nx">$tmp_conf</span> <span class="o">&gt;</span> <span class="nx">$conf_dir$dest_vm_id</span><span class="s2">&quot;.conf&quot;</span>
</span><span class='line'><span class="nx">cp</span> <span class="o">-</span><span class="nx">r</span>  <span class="nx">$image_dir$source_vm_id</span> <span class="nx">$image_dir$dest_vm_id</span>
</span><span class='line'><span class="nx">mv</span> <span class="nx">$image_dir$dest_vm_id$source_vm_file</span> <span class="nx">$image_dir$dest_vm_id$dest_vm_file</span>
</span></code></pre></td></tr></table></div></figure>


<p>稍微解释下功能实现原理：</p>

<pre><code>   1.虚拟机的配置文件分两种，第一种是纯粹的平台识别标志和一些目录指向，第二种就是数据文件，虚拟机数据存放的地方。目录如下/etc/pve/nodes/server9/qemu-server/，这个是配置数据文件存放目录；/var/lib/vz/images/，这是配置文件目录。这里多说点，做过集群的所有节点上都会存一份所有节点虚拟机的配置文件，也就是说节点控制台是可以看到其他节点的虚拟机基本信息，但是不能做控制，在/etc/pve/nodes下你会看见集群下所有节点的目录；数据目录下之存节点下的虚拟机数据文件。
   2.复制原理，将配置文件下一些基本信息修改成新创建虚拟机的，然后将数据文件复制到新虚拟机配置文件制定的目录。这样平台上的信息就修改完毕了，然后就是修改虚拟机里面系统的配置了，一些主机名啊，IP啊什么的，这些也是可以通过初始化脚本实现的，时间问题目前没有脚本，晚些时候再贴出来。

    3.至于脚本语法我就不解释了。
</code></pre>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">root</span><span class="err">@</span><span class="nx">server9</span><span class="o">:~</span><span class="err">#</span> <span class="nx">more</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">pve</span><span class="o">/</span><span class="nx">nodes</span><span class="o">/</span><span class="nx">server9</span><span class="o">/</span><span class="nx">qemu</span><span class="o">-</span><span class="nx">server</span><span class="o">/</span><span class="mi">160</span><span class="p">.</span><span class="nx">conf</span>
</span><span class='line'><span class="nx">bootdisk</span><span class="o">:</span> <span class="nx">virtio0</span>
</span><span class='line'><span class="nx">cores</span><span class="o">:</span> <span class="mi">2</span>
</span><span class='line'><span class="nx">ide2</span><span class="o">:</span> <span class="nx">ISO</span><span class="o">-</span><span class="nx">Storage</span><span class="o">:</span><span class="nx">iso</span><span class="o">/</span><span class="nx">CentOS</span><span class="o">-</span><span class="mf">6.2</span><span class="o">-</span><span class="nx">x86_64</span><span class="o">-</span><span class="nx">bin</span><span class="o">-</span><span class="nx">DVD1</span><span class="p">.</span><span class="nx">iso</span><span class="p">,</span><span class="nx">media</span><span class="o">=</span><span class="nx">cdrom</span>
</span><span class='line'><span class="nx">memory</span><span class="o">:</span> <span class="mi">4096</span>
</span><span class='line'><span class="nx">name</span><span class="o">:</span> <span class="nx">hbase</span><span class="o">-</span><span class="nx">i1</span>
</span><span class='line'><span class="nx">net0</span><span class="o">:</span> <span class="nx">virtio</span><span class="o">=</span><span class="nx">F6</span><span class="o">:</span><span class="mi">43</span><span class="o">:</span><span class="mi">53</span><span class="o">:</span><span class="nx">C5</span><span class="o">:</span><span class="nx">AC</span><span class="o">:</span><span class="mi">83</span><span class="p">,</span><span class="nx">bridge</span><span class="o">=</span><span class="nx">vmbr0</span>
</span><span class='line'><span class="nx">ostype</span><span class="o">:</span> <span class="nx">l26</span>
</span><span class='line'><span class="nx">sockets</span><span class="o">:</span> <span class="mi">2</span>
</span><span class='line'><span class="nx">virtio0</span><span class="o">:</span> <span class="nx">local</span><span class="o">:</span><span class="mi">160</span><span class="o">/</span><span class="nx">vm</span><span class="o">-</span><span class="mi">160</span><span class="o">-</span><span class="nx">disk</span><span class="o">-</span><span class="mi">1</span><span class="p">.</span><span class="nx">qcow2</span><span class="p">,</span><span class="nx">cache</span><span class="o">=</span><span class="nx">writeback</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个是平台配置文件里面的基本内容</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s1">&#39;s/&#39;</span><span class="nx">$</span><span class="p">{</span><span class="nx">source_vm_id</span><span class="p">}</span><span class="s1">&#39;/&#39;</span><span class="nx">$</span><span class="p">{</span><span class="nx">dest_vm_id</span><span class="p">}</span><span class="s1">&#39;/g&#39;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s2">&quot;s/virtio=\S\+,/virtio=$random_mac_addr,/&quot;</span> <span class="nx">$tmp_conf</span>
</span></code></pre></td></tr></table></div></figure>


<p>这两句是替换上面配置文件里面的VMID号，和MAC地址</p>

<p>最新版，添加修改NAME</p>

<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span><span class="o">!</span><span class="err">/bin/bash</span>
</span><span class='line'><span class="nx">image_dir</span><span class="o">=</span><span class="s2">&quot;/var/lib/vz/images/&quot;</span>
</span><span class='line'><span class="nx">conf_dir</span><span class="o">=</span><span class="s2">&quot;/etc/pve/nodes/server9/qemu-server/&quot;</span>
</span><span class='line'><span class="nx">source_vm_id</span><span class="o">=</span><span class="nx">$1</span>
</span><span class='line'><span class="nx">dest_vm_id</span><span class="o">=</span><span class="nx">$2</span>
</span><span class='line'><span class="nx">vm_name</span><span class="o">=</span><span class="nx">$3</span>
</span><span class='line'><span class="nx">dest_vm_file</span><span class="o">=</span><span class="s2">&quot;/vm-$dest_vm_id-disk-1.qcow2&quot;</span>
</span><span class='line'><span class="nx">source_vm_file</span><span class="o">=</span><span class="s2">&quot;/vm-$source_vm_id-disk-1.qcow2&quot;</span>
</span><span class='line'><span class="nx">random_mac_addr</span><span class="o">=</span><span class="s2">&quot;52:60:$(dd if=/dev/urandom count=1 2&gt;/dev/null | md5sum |sed &#39;s/^\(..\)\(..\)\(..\)\(..\).*$/\1:\2:\3:\4/&#39;)&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">tmp_conf</span><span class="o">=</span><span class="s2">&quot;/tmp/&quot;</span><span class="nx">$dest_vm_id</span><span class="s2">&quot;.txt&quot;</span>
</span><span class='line'><span class="nx">cat</span> <span class="nx">$conf_dir$source_vm_id</span><span class="s2">&quot;.conf&quot;</span> <span class="o">&gt;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s1">&#39;s/&#39;</span><span class="nx">$</span><span class="p">{</span><span class="nx">source_vm_id</span><span class="p">}</span><span class="s1">&#39;/&#39;</span><span class="nx">$</span><span class="p">{</span><span class="nx">dest_vm_id</span><span class="p">}</span><span class="s1">&#39;/g&#39;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s2">&quot;s/virtio=\S\+,/virtio=$random_mac_addr,/&quot;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s2">&quot;s/name: \S\+/name: $vm_name/&quot;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">cat</span> <span class="nx">$tmp_conf</span> <span class="o">&gt;</span> <span class="nx">$conf_dir$dest_vm_id</span><span class="s2">&quot;.conf&quot;</span>
</span><span class='line'><span class="nx">cp</span> <span class="o">-</span><span class="nx">r</span>  <span class="nx">$image_dir$source_vm_id</span> <span class="nx">$image_dir$dest_vm_id</span>
</span><span class='line'><span class="nx">mv</span> <span class="nx">$image_dir$dest_vm_id$source_vm_file</span> <span class="nx">$image_dir$dest_vm_id$dest_vm_file</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>shell</span><a href='http://foo.url/foo.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">vim</span> <span class="nx">clone_vmdk</span><span class="p">.</span><span class="nx">sh</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="o">!</span><span class="err">/bin/sh</span>
</span><span class='line'><span class="nx">image_dir</span><span class="o">=</span><span class="s2">&quot;/var/lib/vz/images/&quot;</span>
</span><span class='line'><span class="nx">conf_dir</span><span class="o">=</span><span class="s2">&quot;/etc/pve/nodes/dtt/qemu-server/&quot;</span>
</span><span class='line'><span class="nx">source_vm_id</span><span class="o">=</span><span class="nx">$1</span>
</span><span class='line'><span class="nx">dest_vm_id</span><span class="o">=</span><span class="nx">$2</span>
</span><span class='line'><span class="nx">vm_name</span><span class="o">=</span><span class="nx">$3</span>
</span><span class='line'><span class="nx">dest_vm_file</span><span class="o">=</span><span class="s2">&quot;/vm-$dest_vm_id-disk-1.vmdk&quot;</span>
</span><span class='line'><span class="nx">source_vm_file</span><span class="o">=</span><span class="s2">&quot;/vm-$source_vm_id-disk-1.vmdk&quot;</span>
</span><span class='line'><span class="nx">random_mac_addr</span><span class="o">=</span><span class="s2">&quot;2A:AB:$(dd if=/dev/urandom count=1 2&gt;/dev/null | md5sum |sed &#39;s/^\(..\)\(..\)\(..\)\(..\).*$/\1:\2:\3:\4/&#39;)&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">tmp_conf</span><span class="o">=</span><span class="s2">&quot;/tmp/&quot;</span><span class="nx">$dest_vm_id</span><span class="s2">&quot;.txt&quot;</span>
</span><span class='line'><span class="nx">cat</span> <span class="nx">$conf_dir$source_vm_id</span><span class="s2">&quot;.conf&quot;</span> <span class="o">&gt;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s1">&#39;s/&#39;</span><span class="nx">$</span><span class="p">{</span><span class="nx">source_vm_id</span><span class="p">}</span><span class="s1">&#39;/&#39;</span><span class="nx">$</span><span class="p">{</span><span class="nx">dest_vm_id</span><span class="p">}</span><span class="s1">&#39;/g&#39;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s2">&quot;s/e1000=\S\+,/e1000=$random_mac_addr,/&quot;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">sed</span> <span class="o">-</span><span class="nx">i</span> <span class="o">-</span><span class="nx">e</span> <span class="s2">&quot;s/name: \S\+/name: $vm_name/&quot;</span> <span class="nx">$tmp_conf</span>
</span><span class='line'><span class="nx">cat</span> <span class="nx">$tmp_conf</span> <span class="o">&gt;</span> <span class="nx">$conf_dir$dest_vm_id</span><span class="s2">&quot;.conf&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">[</span> <span class="o">!</span> <span class="o">-</span><span class="nx">d</span> <span class="s2">&quot;$image_dir$dest_vm_id&quot;</span> <span class="p">];</span><span class="nx">then</span>
</span><span class='line'><span class="nx">cp</span> <span class="o">-</span><span class="nx">r</span> <span class="nx">$image_dir$source_vm_id</span> <span class="nx">$image_dir$dest_vm_id</span>
</span><span class='line'><span class="nx">mv</span> <span class="nx">$image_dir$dest_vm_id$source_vm_file</span> <span class="nx">$image_dir$dest_vm_id$dest_vm_file</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="nx">echo</span> <span class="s2">&quot;The directory already exists:&quot;</span><span class="nx">$image_dir$dest_vm_id</span>
</span><span class='line'><span class="nx">fi</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
